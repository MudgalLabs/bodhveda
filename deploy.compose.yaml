services:
    api:
        container_name: bodhveda_api
        image: ceoshikhar/bodhveda_api:beta
        build:
            dockerfile: api.dockerfile
            args:
                TARGETOS: ${TARGETOS}
                TARGETARCH: ${TARGETARCH}
        environment:
            BODHVEDA_API_ENV: production
            BODHVEDA_API_LOG_LEVEL: ${BODHVEDA_API_LOG_LEVEL}
            BODHVEDA_API_LOG_FILE: ./logs/${BODHVEDA_API_LOG_FILE}
            BODHVEDA_DB_URL: ${BODHVEDA_DB_URL}
            BODHVEDA_REDIS_URL: ${BODHVEDA_REDIS_URL}
            BODHVEDA_WEB_URL: ${BODHVEDA_WEB_URL}
            # BODHVEDA_ENABLE_SIGN_UP: ${BODHVEDA_ENABLE_SIGN_UP}
            # BODHVEDA_ENABLE_SIGN_IN: ${BODHVEDA_ENABLE_SIGN_IN}
            BODHVEDA_ENABLE_GOOGLE_OAUTH: ${BODHVEDA_ENABLE_GOOGLE_OAUTH}
            BODHVEDA_GOOGLE_REDIRECT_URL: ${BODHVEDA_GOOGLE_REDIRECT_URL}
            BODHVEDA_GOOGLE_CLIENT_ID: ${BODHVEDA_GOOGLE_CLIENT_ID}
            BODHVEDA_GOOGLE_CLIENT_SECRET: ${BODHVEDA_GOOGLE_CLIENT_SECRET}
            BODHVEDA_API_CIPHER_KEY: ${BODHVEDA_API_CIPHER_KEY}
            BODHVEDA_API_HASH_KEY: ${BODHVEDA_API_HASH_KEY}
            TZ: ${TZ}
        ports:
            - 1338:1338
        networks:
            - bodhveda_network
            - caddy_net
        volumes:
            - ./volumes/api_logs:/app/logs
        restart: unless-stopped
        command: ["./bodhveda"]
        depends_on:
            db:
                condition: service_healthy
                restart: true
            redis:
                condition: service_healthy
                restart: true
    worker:
        container_name: bodhveda_worker
        image: ceoshikhar/bodhveda_api:beta
        build:
            dockerfile: api.dockerfile
            args:
                TARGETOS: ${TARGETOS}
                TARGETARCH: ${TARGETARCH}
        environment:
            BODHVEDA_API_ENV: production
            BODHVEDA_API_LOG_LEVEL: ${BODHVEDA_API_LOG_LEVEL}
            BODHVEDA_API_LOG_FILE: ./logs/${BODHVEDA_API_LOG_FILE}
            BODHVEDA_DB_URL: ${BODHVEDA_DB_URL}
            BODHVEDA_REDIS_URL: ${BODHVEDA_REDIS_URL}
            BODHVEDA_WEB_URL: ${BODHVEDA_WEB_URL}
            # BODHVEDA_ENABLE_SIGN_UP: ${BODHVEDA_ENABLE_SIGN_UP}
            # BODHVEDA_ENABLE_SIGN_IN: ${BODHVEDA_ENABLE_SIGN_IN}
            BODHVEDA_ENABLE_GOOGLE_OAUTH: ${BODHVEDA_ENABLE_GOOGLE_OAUTH}
            BODHVEDA_GOOGLE_REDIRECT_URL: ${BODHVEDA_GOOGLE_REDIRECT_URL}
            BODHVEDA_GOOGLE_CLIENT_ID: ${BODHVEDA_GOOGLE_CLIENT_ID}
            BODHVEDA_GOOGLE_CLIENT_SECRET: ${BODHVEDA_GOOGLE_CLIENT_SECRET}
            BODHVEDA_API_CIPHER_KEY: ${BODHVEDA_API_CIPHER_KEY}
            BODHVEDA_API_HASH_KEY: ${BODHVEDA_API_HASH_KEY}
            TZ: ${TZ}
        networks:
            - bodhveda_network
            - caddy_net
        volumes:
            - ./volumes/api_logs:/app/logs
        restart: unless-stopped
        depends_on:
            db:
                condition: service_healthy
                restart: true
            redis:
                condition: service_healthy
                restart: true
        command: ["./worker"]

    redis:
        container_name: bodhveda_redis
        env_file:
            - .env
        image: redis:8.2-alpine
        ports:
            - 6776:6379
        networks:
            - bodhveda_network
            - caddy_net
        volumes:
            - ./volumes/redis_data:/data
        restart: unless-stopped
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "redis-cli -a ${BODHVEDA_REDIS_PASSWORD} ping | grep PONG",
                ]
            interval: 1s
            timeout: 3s
            retries: 5
        command: ["redis-server", "--requirepass", "${BODHVEDA_REDIS_PASSWORD}"]

    db:
        container_name: bodhveda_db
        image: postgres:17.4-alpine
        environment:
            PGPORT: 42070
            POSTGRES_DB: ${BODHVEDA_DB_NAME}
            POSTGRES_USER: ${BODHVEDA_DB_USER}
            POSTGRES_PASSWORD: ${BODHVEDA_DB_PASSWORD}
        ports:
            - 42070:42070
        networks:
            - bodhveda_network
            - caddy_net
        volumes:
            - ./volumes/db_data:/var/lib/postgresql/data
        restart: unless-stopped
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "pg_isready -U ${BODHVEDA_DB_USER} -d ${BODHVEDA_DB_NAME}",
                ]
            interval: 10s
            timeout: 5s
            retries: 5

networks:
    bodhveda_network:
        name: bodhveda_network
    caddy_net:
        external: true
